> install.packages("devtools")    # within R / RStudio
install.packages("devtools")    # within R / RStudio
library(devtools)
("Rtools")
install.packages("Rtools")
library(devtools)
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
library(slidify)
getwd
getwd()
setwd("~/GitHub/R-working/Coursera stuff")
getwd()
args(sd)
args(lr)
args(lm)
args(plot)
args(plotm)
args(ploty)
f<-function(a,b){
print (a)
print (b)
}
f(45)
f(45,55)
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
z<-10
f(3)
add2 <-function(x,y) {
x+y
}
add2(3,5)
above <-function(x,n) {
use <- x > n
x[use]
}
x<-1:10000
above(x,8999)
above_10 <-function(x) {
use <- x > 10
x[use]
}
above_10(8999)
above_10(1:8999)
clear
clear()
above <-function(x,n=10) {
use <- x > n
x[use]
}
above(1:20)
columnmean <- function(y) {}
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(hw1_data)
read.csv("hw1_data.csv")
columnmean(hw1_data)
hw1_data <- read.csv("hw1_data.csv")
columnmean(hw1_data)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i] na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i] na.rm = removeNA)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(hw1_data)
columnmean(hw1_data, FALSE)
?strptime
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
h(1)
f<-1
h(1)
